//---------------------------------------------------------------------------

#ifndef listH
#define listH
//---------------------------------------------------------------------------
#endif

#include<String.h>
#include<String>
#include <vcl.h>


#include "Unit1.h"

#include<String.h>
#include<String>


 class worker
 {
 private:
 String name,project,exercise,dataPr,dataBegin,dataEnd;
 public:

	void get(String name,String project,String exercise,String dataPr,String dataBegin,String dataEnd)
	{

	  this->name=name;
	  this->project=project;
	  this->exercise=exercise;
	  this->dataPr=dataPr;
	  this->dataBegin=dataBegin;
	  this->dataEnd=dataEnd;

	}

	void print(TMemo *Memo1)
	{
	Memo1->Lines->Add(name+"  "+project+"  "+exercise+"  "+dataPr+"  "+dataBegin+"  "+dataEnd+"\n");
	Memo1->Lines->Add("\n");
	}

	void operator=(const worker& p)
	{
	   this->name=p.name;
	   this->project=p.project;
	   this->exercise=p.exercise;
	   this->dataPr=p.dataPr;
	   this->dataBegin=p.dataBegin;
	   this->dataEnd=p.dataEnd;
	}

	 //friend void delet(int n,worker *&arr,int &size);
      void delet(int n,worker *&arr,int &size)
	{
		 worker* newArr=new worker[size-1];
		 int index=0;
		 for(int i=0;i<size;i++)
		 {
		   if(i!=n)
			{

			 newArr[index].operator=(arr[i]);
			 index++;
			}

		 }
		 delete []arr;
		 arr=newArr;
	}

 };
 /*
 void delet(int n,worker *&arr,int &size)
	{
		 worker* newArr=new worker[size-1];
		 int index=0;
		 for(int i=0;i<size;i++)
		 {
		   if(i!=n)
			{

			 newArr[index].operator=(arr[i]);
			 index++;
			}

		 }
		 delete []arr;
		 arr=newArr;
	}

	 void print1(TMemo *Memo1)
	 {
		  Memo1->Lines->Add("adasda");
	 }
   */
