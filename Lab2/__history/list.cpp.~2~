//---------------------------------------------------------------------------

#pragma hdrstop

#include "list.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
 #include<String.h>
#include<String>
#include <vcl.h>
#include "Unit1.h"
#include<math.h>

void worker::processArr(int *time,worker *arr,int size,TMemo *Memo1)
 {
	 AnsiString s,subStr="";
	 int alpha[3]={10,1000,1000000};
	 int iter=0;
	 int begin=1;
	 int index=0;

	 for(int i=0;i<size;i++)
	 {
		time[i]=0;
	 }


	for(int i=0;i<size;i++)
	  {
		 s=arr[i].dataEnd+".re";
		for(int j=1;j<s.Length();j++)
		 {
		   if(s[j]=='.')
		   {

			for(int k=begin;k<j;k++)
			{
			  subStr=subStr+s[k];
			}
			time[index]=time[index]+StrToInt(subStr)*alpha[iter];
			iter++;
			begin=j+1;
		   }
		   subStr="";
		 }

		 iter=0;
		 begin=1;
		 index++;

	  }
 }

   void worker::processData(int *time,worker *arr,int size,TMemo *Memo1)
  {

	 AnsiString start,end,subStrStart="",subStrEnd="";
	 int alpha[3]={1,30,365};
	 int iter=0;
	 int begin=1;
	 int index=0;
	 int workTime;
	 for(int i=0;i<size;i++)
	 {
		time[i]=0;
	 }

		for(int i=0;i<size;i++)
	  {
		 end=arr[i].dataEnd+".re";
		 start=arr[i].dataBegin+".re";

		for(int j=1;j<start.Length();j++)
		 {
		   if(start[j]=='.')
		   {

			for(int k=begin;k<j;k++)
			{
			  subStrStart=subStrStart+start[k];
			  subStrEnd=subStrEnd+end[k];
			}
			time[index]=time[index]+abs(StrToInt(subStrStart)-StrToInt(subStrEnd))*alpha[iter];
			iter++;
			begin=j+1;
		   }

		 subStrStart="";
		 subStrEnd="";
		 }
		 index++;
		 iter=0;
		 begin=1;


	  }
  }
