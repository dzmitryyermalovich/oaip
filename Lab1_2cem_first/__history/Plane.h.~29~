//---------------------------------------------------------------------------

#ifndef PlaneH
#define PlaneH
//---------------------------------------------------------------------------
#endif
#include<vcl.h>
class plane
{
  public:

  plane(int x1,int y1,int x2,int y2)
  {
  this-> x1=x1;
  this-> y1=y1;
  this-> x2=x2;
  this-> y2=y2;
  }

  void show(TCanvas *Canvas);

  void hide(TCanvas *Canvas);

  void move(TCanvas *Canvas,int lr);

  void moveDown(TCanvas *Canvas);

  protected:
  int x1;
  int x2;
  int y1;
  int y2;
  int learningRate=5;
};


class chassis:public plane
{
public:

  chassis(int x1,int y1,int x2,int y2):plane(x1,y1,x2,y2){}

  void move(TCanvas *Canvas);

  void hideChassisFly(TCanvas *Canvas)
  {
   Canvas->Pen->Color=clWhite;

   Canvas->MoveTo(x2,y2-1);
   Canvas->LineTo(x2+20,y2-1);
   Canvas->Ellipse((x2+20)-10,(y2-1)+10,(x2+20)+10,(y2-1)-10);

   Canvas->MoveTo(x1,y2-1);
   Canvas->LineTo(x1-20,y2-1);
   Canvas->Ellipse((x1-20)-10,(y2-1)+10,(x1-20)+10,(y2-1)-10);
  }

  void moveChassisFly(TCanvas *Canvas)
  {
   Canvas->MoveTo(x2,y2-1);
   Canvas->LineTo(x2+20,y2-1);
   Canvas->Ellipse((x2+20)-10,(y2-1)+10,(x2+20)+10,(y2-1)-10);

   Canvas->MoveTo(x1,y2-1);
   Canvas->LineTo(x1-20,y2-1);
   Canvas->Ellipse((x1-20)-10,(y2-1)+10,(x1-20)+10,(y2-1)-10);
  }

  void hideChassisDown(TCanvas *Canvas)
  {
   Canvas->Pen->Color=clWhite;

   Canvas->MoveTo(x2,y2-1);



   if(((x2+20)-i)==x2)
   {
	   Canvas->MoveTo(x2,y2-1);
	   Canvas->LineTo(x2,y2-1+i);
	   Canvas->Ellipse(x2-10,((y2-1)+i)+10,x2+10,((y2-1)+i)-10);

	   Canvas->MoveTo(x1,y2-1);
	   Canvas->LineTo(x1,y2-1+i);
	   Canvas->Ellipse(x1-10,((y2-1)+i)+10,x1+10,((y2-1)+i)-10);

   }
   else
   {
	   Canvas->MoveTo(x2,y2-1);
	   Canvas->LineTo((x2+20)-(i-5),y2-1+(i-5));
	   Canvas->Ellipse((x2+20)-10-(i-5),((y2-1)+i-5)+10,(x2+20)+10-(i-5),((y2-1)+i-5)-10);

	   Canvas->MoveTo(x1,y2-1);
	   Canvas->LineTo((x1-20)+(i-5),y2-1+(i-5));
	   Canvas->Ellipse((x1-20)-10+(i-5),((y2-1)+i-5)+10,(x1-20)+10+(i-5),((y2-1)+i-5)-10);
   }



  }

  void moveFinal(TCanvas *Canvas)
  {
   Canvas->Pen->Color=clRed;

   Canvas->MoveTo(x2,y2-1);
   Canvas->LineTo((x2+20)-i,y2-1+i);
   Canvas->Ellipse(x2-10,((y2-1)+i)+10,x2+10,((y2-1)+i)-10);

   Canvas->MoveTo(x1,y2-1);
   Canvas->LineTo((x1-20)+i,y2-1+i);
   Canvas->Ellipse(x1-10,((y2-1)+i)+10,x1+10,((y2-1)+i)-10);
  }

  void moveChassisDown(TCanvas *Canvas)
  {

   Canvas->MoveTo(x2,y2-1);
   Canvas->LineTo((x2+20)-i,y2-1+i);
   Canvas->Ellipse((x2+20)-10-i,((y2-1)+i)+10,(x2+20)+10-i,((y2-1)+i)-10);

   Canvas->MoveTo(x1,y2-1);
   Canvas->LineTo((x1-20)+i,y2-1+i);
   Canvas->Ellipse((x1-20)-10+i,(y2-1+i)+10,(x1-20)+10+i,(y2-1+i)-10);

   if(((x2+20)-i)!=x2)
   {
   i+=5;
   }


  }

  void moveDown(TCanvas *Canvas)
  {
  if(((x2+20)-i)==x2)
  {

	hideChassisDown(Canvas);
	plane::move(Canvas,2);
	moveFinal(Canvas);
  }
  else
  {
   hideChassisDown(Canvas);
   plane::moveDown(Canvas);
   moveChassisDown(Canvas);
  }
  }

   private:
   int i=0;
   int kof=5;
};

